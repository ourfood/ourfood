<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context.xsd
     http://www.springframework.org/schema/aop
     http://www.springframework.org/schema/aop/spring-aop.xsd
     http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<context:component-scan	base-package="com.my.favorite" />

	<!-- spring mvc 配置 -->
	<!-- spring mvc 视图解析器 -->
	<bean id="jspViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 用户处理静态资源 -->
	<mvc:default-servlet-handler />

	<!-- mvc注释驱动 -->
	<mvc:annotation-driven />


	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>

	<!-- 数据源 dbpc：org.apache.commons.dbcp.BasicDataSource Spring自带连接池： -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName"
			value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://localhost/favorite?useUnicode=true&amp;characterEncoding=UTF-8" />
		<property name="username" value="root" />
		<property name="password" value="a" />
	</bean>

	<!-- 创建MyBatis的会话工厂 加载配置方法 1、直接读取mybatis 配置文件（数据源、mapper） 2、直接在Bean 中配置 
		mapperLocations : 映射文件包路径 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<!-- <property name="mapperLocations"
			value="com/my/favorite/dao/*.xml"></property> -->
	</bean>

	<!-- 统一配置接口 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com/my/favorite/dao"></property>
	</bean>

	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<!-- 所有的get开头的方法 -->
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<!-- 其他所有的方法 隔离级别 超时 -1 秒 rollback-for="BizException(异常类型）" no-rollback-for="RuntimeException" 
				回滚规则：默认情况下，当方法抛出 运行期异常（RuntimeException），则会触发事务回滚 -->
			<tx:method name="*" isolation="DEFAULT" timeout="-1" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="txA"
			expression="execution(* com.my.favorite.biz.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txA" />
	</aop:config>

</beans>